// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.Property<int>("CodigoCliente")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("ApellidoContacto")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<int>("CodigoEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("Cuidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar");

                    b.Property<decimal>("LimiteCredito")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal");

                    b.Property<string>("LineaDireccion1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("LineaDireccion2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("NombreContacto")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar");

                    b.HasKey("CodigoCliente");

                    b.HasIndex("CodigoEmpleado");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.DetallePedido", b =>
                {
                    b.Property<int>("CodigoPedido")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("CodigoProducto")
                        .HasMaxLength(15)
                        .HasColumnType("varchar");

                    b.Property<int>("Cantidad")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<short>("NumeroLinea")
                        .HasMaxLength(6)
                        .HasColumnType("smallint");

                    b.Property<decimal>("PrecioUnidad")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal");

                    b.HasKey("CodigoPedido", "CodigoProducto");

                    b.HasIndex("CodigoProducto");

                    b.ToTable("detalle_pedido", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Empleado", b =>
                {
                    b.Property<int>("CodigoEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Apellido2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int?>("CodigoJefe")
                        .HasColumnType("int");

                    b.Property<string>("CodigoOficina")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Puesto")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("CodigoEmpleado");

                    b.HasIndex("CodigoJefe");

                    b.HasIndex("CodigoOficina");

                    b.ToTable("empleado", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.GamaProducto", b =>
                {
                    b.Property<string>("Gama")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("gama");

                    b.Property<string>("DescripcionHtml")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescripcionTexto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagen")
                        .HasMaxLength(256)
                        .HasColumnType("Varchar");

                    b.HasKey("Gama");

                    b.ToTable("gama_producto", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Oficina", b =>
                {
                    b.Property<string>("CodigoOficina")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("Cuidad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("LineaDireccion1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("LineaDireccion2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.HasKey("CodigoOficina");

                    b.ToTable("oficina", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Pago", b =>
                {
                    b.Property<string>("IdTransacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("CodigoCLiente")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("Date");

                    b.Property<string>("FormaPago")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar");

                    b.Property<decimal>("Total")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal");

                    b.HasKey("IdTransacion");

                    b.HasIndex("CodigoCLiente");

                    b.ToTable("pago", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Pedido", b =>
                {
                    b.Property<int>("CodigoPedido")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int>("CodigoCliente")
                        .HasColumnType("int");

                    b.Property<string>("Comentarios")
                        .HasColumnType("Text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaEsperada")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("date");

                    b.HasKey("CodigoPedido");

                    b.HasIndex("CodigoCliente");

                    b.ToTable("pedido", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.Property<string>("CodigoProducto")
                        .HasMaxLength(15)
                        .HasColumnType("Varchar");

                    b.Property<short>("CantidadStock")
                        .HasMaxLength(6)
                        .HasColumnType("Smallint");

                    b.Property<string>("Descripcion")
                        .HasColumnType("Text");

                    b.Property<string>("Dimensiones")
                        .HasMaxLength(25)
                        .HasColumnType("varchar");

                    b.Property<string>("Gama")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar");

                    b.Property<decimal>("PrecioProveedor")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal>("PrecioVenta")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal");

                    b.Property<string>("Proveedor")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("CodigoProducto");

                    b.HasIndex("Gama");

                    b.ToTable("producto", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.HasOne("Dominio.Entities.Empleado", "Empleado")
                        .WithMany("Clientes")
                        .HasForeignKey("CodigoEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Dominio.Entities.DetallePedido", b =>
                {
                    b.HasOne("Dominio.Entities.Pedido", "Pedido")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("CodigoPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Producto", "Producto")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("CodigoProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Dominio.Entities.Empleado", b =>
                {
                    b.HasOne("Dominio.Entities.Empleado", "Jefe")
                        .WithMany("Empleados")
                        .HasForeignKey("CodigoJefe");

                    b.HasOne("Dominio.Entities.Oficina", "Oficina")
                        .WithMany("Empleados")
                        .HasForeignKey("CodigoOficina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jefe");

                    b.Navigation("Oficina");
                });

            modelBuilder.Entity("Dominio.Entities.Pago", b =>
                {
                    b.HasOne("Dominio.Entities.Cliente", "Cliente")
                        .WithMany("Pagos")
                        .HasForeignKey("CodigoCLiente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.Entities.Pedido", b =>
                {
                    b.HasOne("Dominio.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("CodigoCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.HasOne("Dominio.Entities.GamaProducto", "GamaProducto")
                        .WithMany("Productos")
                        .HasForeignKey("Gama")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GamaProducto");
                });

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Dominio.Entities.Empleado", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Dominio.Entities.GamaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Dominio.Entities.Oficina", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Dominio.Entities.Pedido", b =>
                {
                    b.Navigation("DetallePedidos");
                });

            modelBuilder.Entity("Dominio.Entities.Producto", b =>
                {
                    b.Navigation("DetallePedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
